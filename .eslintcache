[{"/home/patrik/PetProjekt/game/src/index.js":"1","/home/patrik/PetProjekt/game/src/App.js":"2","/home/patrik/PetProjekt/game/src/Menu.js":"3","/home/patrik/PetProjekt/game/src/CharCard.js":"4","/home/patrik/PetProjekt/game/src/Navi.js":"5","/home/patrik/PetProjekt/game/src/Camp.js":"6","/home/patrik/PetProjekt/game/src/Village.js":"7","/home/patrik/PetProjekt/game/src/Characters.js":"8","/home/patrik/PetProjekt/game/src/ButtonGeneric.js":"9","/home/patrik/PetProjekt/game/src/Button.js":"10","/home/patrik/PetProjekt/game/src/DropDown.js":"11","/home/patrik/PetProjekt/game/src/styledCollection.js":"12","/home/patrik/PetProjekt/game/src/ButtonNextDay.js":"13","/home/patrik/PetProjekt/game/src/EndOfDayEvent.js":"14","/home/patrik/PetProjekt/game/src/QuestAndEnemy/QuestV2.js":"15","/home/patrik/PetProjekt/game/src/Data/CharData/charStatFunctions.js":"16","/home/patrik/PetProjekt/game/src/Data/EnvData/races.js":"17","/home/patrik/PetProjekt/game/src/Tournament.js":"18","/home/patrik/PetProjekt/game/src/Shop.js":"19","/home/patrik/PetProjekt/game/src/Data/EnvData/items.js":"20","/home/patrik/PetProjekt/game/src/CampQuest.js":"21","/home/patrik/PetProjekt/game/src/QuestAndEnemy/MainQuest1.js":"22","/home/patrik/PetProjekt/game/src/CombatModule.js":"23","/home/patrik/PetProjekt/game/src/MenuWindow.js":"24"},{"size":410,"mtime":1610232768249,"results":"25","hashOfConfig":"26"},{"size":16163,"mtime":1612350586778,"results":"27","hashOfConfig":"26"},{"size":218,"mtime":1612182141323,"results":"28","hashOfConfig":"26"},{"size":2312,"mtime":1610640869814,"results":"29","hashOfConfig":"26"},{"size":769,"mtime":1610903630876,"results":"30","hashOfConfig":"26"},{"size":2752,"mtime":1612471968293,"results":"31","hashOfConfig":"26"},{"size":3033,"mtime":1612339532969,"results":"32","hashOfConfig":"26"},{"size":1056,"mtime":1611097568657,"results":"33","hashOfConfig":"26"},{"size":305,"mtime":1610398802910,"results":"34","hashOfConfig":"26"},{"size":319,"mtime":1610232694006,"results":"35","hashOfConfig":"26"},{"size":2605,"mtime":1611520204496,"results":"36","hashOfConfig":"26"},{"size":2869,"mtime":1612339980520,"results":"37","hashOfConfig":"26"},{"size":236,"mtime":1610271795454,"results":"38","hashOfConfig":"26"},{"size":8679,"mtime":1612350354874,"results":"39","hashOfConfig":"26"},{"size":6327,"mtime":1610900033811,"results":"40","hashOfConfig":"26"},{"size":2112,"mtime":1612280189411,"results":"41","hashOfConfig":"26"},{"size":1127,"mtime":1610730605894,"results":"42","hashOfConfig":"26"},{"size":4496,"mtime":1612466888417,"results":"43","hashOfConfig":"26"},{"size":3389,"mtime":1612467014096,"results":"44","hashOfConfig":"26"},{"size":1368,"mtime":1611010484838,"results":"45","hashOfConfig":"26"},{"size":2666,"mtime":1612471819596,"results":"46","hashOfConfig":"26"},{"size":2023,"mtime":1611230781814,"results":"47","hashOfConfig":"26"},{"size":11262,"mtime":1612350944956,"results":"48","hashOfConfig":"26"},{"size":1329,"mtime":1612277183989,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"aubwdo",{"filePath":"53","messages":"54","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":4,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/home/patrik/PetProjekt/game/src/index.js",[],["107","108"],"/home/patrik/PetProjekt/game/src/App.js",["109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134"],"import './App.css';\nimport React, { useState } from \"react\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport CharCard from \"./CharCard\";\nimport Menu from \"./Menu\";\nimport Navi from \"./Navi\";\nimport Camp from \"./Camp\";\nimport Tournament from \"./Tournament\";\nimport Village from \"./Village\";\nimport Characters from \"./Characters\";\nimport { OverLay, CardDiv, Frame, TopShelf, LeftLower, TopLeft, LeftUpper, TopRight, MainBody, Left, Right, NextDayDiv } from \"./styledCollection\";\nimport Vill from \"./Data/PlaceData/vill.json\";\nimport Chars from \"./Data/CharData/char.json\";\nimport Env from \"./Data/EnvData/env.json\";\nimport ButtonNextDay from \"./ButtonNextDay\";\nimport EndOfDayEvent from \"./EndOfDayEvent\";\nimport { Quest } from \"./QuestAndEnemy/QuestV2\";\nimport { getHealth, getMaxHealth } from \"./Data/CharData/charStatFunctions\";\nimport inventory from \"./Data/EnvData/inventory.json\";\nimport NewVill from \"./Data/PlaceData/villFresh.json\";\nimport NewChar from \"./Data/CharData/charFresh.json\";\nimport NewEnv from \"./Data/EnvData/envFresh.json\";\nimport MenuWindow from \"./MenuWindow\";\n\nfunction App() {\n\n  const [numShown, setNumShown] = useState(0);\n  const [passedContent, setPassedContent] = useState();\n  const [charList, setCharlist] = useState(Chars);\n  const [villageBuilding, setVillageBuilding] = useState(Vill);\n  const [env, setEnv] = useState(Env[0]);\n  const [Day, setDay] = useState(true);\n  const [ForceRefresh, SetForceRefresh] = useState(true);\n  const [quest, setQuest] = useState(Quest);\n  const [endOfdayShown, setEndOfDayShown] = useState(false)\n  const [checkedStat, setCheckedStat] = useState(\" \");\n  const [endDayChar, setEndDayChar] = useState(charList[0])\n  const [rand, setRand] = useState();\n  const [rand2, setRand2] = useState();\n  const [inv, setInv] = useState(inventory);\n  const [messageBox, setMessageBox] = useState([\" \", \" \", \" \", \" \"])\n  const [failNum, setFailNum] = useState(0);\n  const [clueOne, setClueOne] = useState(\" \");\n  const [clueTwo, setClueTwo] = useState(\" \");\n  const [clueThree, setClueThree] = useState(\" \");\n  const [clueFour, setClueFour] = useState(\" \");\n  const [clueFive, setClueFive] = useState(\" \");\n  const [clueSix, setClueSix] = useState(\" \");\n  const [mainFight, setMainFight] = useState(false);\n  const [foughtAlready, setFoughtAlready] = useState(false);\n  const [menuShown, setMenuShown] = useState(false);\n  const [qmSaysApp, setQmSaysApp] = useState(\"Welcome!\")\n\n  const KEY = \"SAVEDGAME\";\n  let random;\n\n  function newGame() {\n    let newCharList = JSON.parse(JSON.stringify(NewChar));\n    setCharlist(newCharList);\n    let newPlaceList = JSON.parse(JSON.stringify(NewVill));\n    setVillageBuilding(newPlaceList);\n    let newEnv = JSON.parse(JSON.stringify(NewEnv));\n    setEnv(newEnv[0]);\n    setDay(NewEnv[0].DayTime);\n    setInv([]);\n    setMenuShown(false);\n    SetForceRefresh(!ForceRefresh);\n    setEndDayChar(NewChar[0]);\n  }\n\n  function saveGame() {\n    let toSave = { chars: 0, places: 0, inv: 0, env: 0 }\n    toSave.chars = charList;\n    toSave.places = villageBuilding;\n    toSave.inv = inv;\n    toSave.env = env;\n    localStorage.setItem(KEY, JSON.stringify(toSave));\n    setMenuShown(false);\n  };\n\n  function loadGame() {\n    let isThereASaveFile = localStorage.getItem(KEY);\n    isThereASaveFile = JSON.parse(isThereASaveFile);\n    if (isThereASaveFile.env == undefined) { return }\n    setCharlist(isThereASaveFile.chars);\n    setVillageBuilding(isThereASaveFile.places);\n    setDay(isThereASaveFile.env.DayTime);\n    setEnv(isThereASaveFile.env);\n    setInv(isThereASaveFile.inv);\n    setEndDayChar(isThereASaveFile.chars[0]);\n    setMenuShown(false);\n    SetForceRefresh(!ForceRefresh);\n  }\n\n  function dropDownPlaceClicked(num, type, onePlace) {\n    charUpdate(num - 1, true, -1, \" \");\n    buildUpdate(type, onePlace.index - 1, false, -1);\n    setCharlist(charList);\n    setVillageBuilding(villageBuilding)\n    SetForceRefresh(!ForceRefresh);\n  }\n\n  function dropDownCharClicked(oneMan, onePlace, type) {\n    charUpdate(oneMan.index - 1, false, onePlace.index, type);\n    buildUpdate(type, onePlace.index - 1, true, oneMan.index);\n    setCharlist(charList);\n    setVillageBuilding(villageBuilding);\n    SetForceRefresh(!ForceRefresh);\n  }\n\n  function charUpdate(num, bool, num2, type) {\n    charList[num].isFree = bool;\n    charList[num].Questing = type;\n    charList[num].occupies = num2;\n    setCharlist(charList);\n    SetForceRefresh(!ForceRefresh);\n  }\n\n  function buildUpdate(type, num1, bool, num2) {\n    if (type == \"Ming\") {\n      villageBuilding[num1].slot2 = bool;\n      villageBuilding[num1].occupant2 = num2;\n      setVillageBuilding(villageBuilding);\n    }\n    else {\n      villageBuilding[num1].slot1 = bool;\n      villageBuilding[num1].occupant1 = num2;\n      setVillageBuilding(villageBuilding);\n    }\n  }\n\n  function challengeSuccessfulStat(charToChange, usedQuest, num1, num2, num3) {\n    env.Gold = env.Gold + usedQuest.rewardGold + num1;\n    charList[charToChange.index - 1].xp = charToChange.xp + usedQuest.rewardXp + num2;\n    charList[charToChange.index - 1].health = charList[charToChange.index - 1].health + num3;\n    charList[charToChange.index - 1].occupies == 1 ? env.Villagers = env.Villagers + 5 : env.Guild = env.Guild + 5;\n    setEnv(env);\n  };\n\n  function challengeFailStat(charToChange, usedQuest) {\n    charList[charToChange.index - 1].health = charList[charToChange.index - 1].health - 60;\n    charList[charToChange.index - 1].xp = charToChange.xp + usedQuest.rewardXp - 10;\n    setCharlist(charList);\n  }\n\n  function updateStats(oneChar) {\n    charList[oneChar.index - 1] = oneChar;\n    setCharlist(charList);\n  };\n\n  function endDone() {\n    env.Threat = env.Threat + 5;\n    setEndOfDayShown(false);\n    endOfDayFreeThePeople();\n    endOfDayFreeThePlaces();\n    threatCheck();\n    SetForceRefresh(!ForceRefresh);\n    setCharlist(charList);\n    endofDayDayChanges();\n    setEndDayChar(charList[0]);\n  };\n\n  function threatCheck() {\n    if (env.Threat > 100) {\n      env.Threat = env.Threat - 100;\n      env.Food > 50 ? env.Food = env.Food - 50 : env.Food = 0;\n      env.Gold > 1500 ? env.Gold = env.Gold - 1500 : env.Gold = 0;\n      setEnv(env);\n    }\n  }\n\n  function endOfDayFreeThePeople() {\n    charList.forEach(element => (element.occupies = -1, element.isFree = true, (element.Questing == \" \" ?\n      element.rested = true : element.rested = false), element.Questing = \" \", levelUp(element),\n      getHealth(element) < getMaxHealth(element) - 6 ? element.health = element.health + 5 : element.health = element.maxHealth));\n    setCharlist(charList);\n  }\n\n  function endOfDayFreeThePlaces() {\n    villageBuilding.forEach(element => (element.occupant1 = -1, element.slot1 = false,\n      element.occupant2 = -1, element.slot2 = false));\n    setVillageBuilding(villageBuilding);\n  }\n\n  function endofDayDayChanges() {\n    if (!env.DayTime) {\n      env.nrOfDay = env.nrOfDay + 1;\n      setFoughtAlready(false);\n      envUpgradesCheck();\n      foodChanger();\n    }\n    setQmSaysApp(\"Welcome!\")\n    env.DayTime = !env.DayTime;\n    setEnv(env);\n    setDay(!Day);\n  }\n\n  function foodChanger() {\n    if (env.Food < env.FoodConsumption) {\n      env.Food = 0;\n      charList.forEach(oneGuy => (\n        oneGuy.health = oneGuy.health - 55));\n    }\n    env.Food = env.Food - env.FoodConsumption;\n    if (env.Food < 0) { env.Food = 0; }\n  }\n\n  function envUpgradesCheck() {\n    if (env.hasTraps) { env.Food = env.Food + 1; }\n    if (env.hasPikes) { env.Threat = env.Threat - 1; }\n    if (env.hasToolkit) {\n      env.Food = env.Food + 1;\n      env.Threat = env.Threat - 1;\n    }\n    if (env.hasGuards) {\n      env.Food = env.Food - 2;\n      env.Threat = env.Threat - 2;\n    }\n    if (env.hasGarden) { env.Food = env.Food + 4; }\n    setEnv(env);\n  }\n\n  function SideCharClick(content) {\n    setNumShown(content.index);\n    setPassedContent(content);\n  }\n\n  function increaseStat(string, char) {\n    if (char.skillpoints > 0) {\n      charList[char.index - 1][string] = charList[[char.index - 1]][string] + 1;\n      char.skillpoints = char.skillpoints - 1;\n      setCharlist(charList);\n      SetForceRefresh(!ForceRefresh);\n    }\n  }\n\n  function levelUp(checkedChar) {\n    switch (checkedChar.lvl) {\n      case 1:\n        levelUpInner(checkedChar, env.xpToLevel2);\n        break;\n      case 2:\n        levelUpInner(checkedChar, env.xpToLevel3);\n        break;\n      case 3:\n        levelUpInner(checkedChar, env.xpToLevel4);\n        break;\n      case 4:\n        levelUpInner(checkedChar, env.xpToLevel5);\n        break;\n      case 5:\n        levelUpInner(checkedChar, env.xpToLevel6);\n        break;\n      case 6:\n        levelUpInner(checkedChar, env.xpToLevel7);\n        break;\n      case 7:\n        levelUpInner(checkedChar, env.xpToLevel8);\n        break;\n      case 8:\n        levelUpInner(checkedChar, env.xpToLevel9);\n        break;\n      case 9:\n        levelUpInner(checkedChar, env.xpToLevel10);\n        break;\n    }\n  }\n\n  function levelUpInner(checkedChar, num) {\n    if (checkedChar.xp > num) {\n      checkedChar.lvl = checkedChar.lvl + 1;\n      checkedChar.xp = checkedChar.xp - num;\n      checkedChar.skillpoints = checkedChar.skillpoints + 2;\n    }\n  }\n\n  function menuClick() {\n    setMenuShown(!menuShown);\n  }\n\n  function nextRound(oneChar) {\n    setEndDayChar(charList[oneChar.index]);\n    SetForceRefresh(!ForceRefresh);\n  }\n\n  function AdvanceTime() {\n    setFailNum(0);\n    setMessageBox([\" \", \" \", \" \", \" \"]);\n    setNumShown(0);\n    if (charList[0].Questing == \"Quest\") {\n      quest.recipent = charList[0].name;\n      quest.giver = villageBuilding[charList[0].occupies - 1].giver;\n      quest.area = quest.areas[rand];\n    }\n    setEndOfDayShown(true);\n  }\n\n  function purchase(oneItem) {\n    if (oneItem.item == \"Food\") {\n      env.Food = env.Food + 1;\n    }\n    else if (oneItem.upgrade) {\n      upgradeBuyCheck(oneItem);\n    }\n    else {\n      inv.push(oneItem);\n    }\n    env.Gold = env.Gold - oneItem.price;\n    setEnv(env);\n    setInv(inv);\n    SetForceRefresh(!ForceRefresh);\n  }\n\n  function upgradeBuyCheck(oneItem) {\n    env.basePoints = env.basePoints + 1\n    upgradeBuyCheckInner(oneItem.item, \"Traps\");\n    upgradeBuyCheckInner(oneItem.item, \"Garden\");\n    upgradeBuyCheckInner(oneItem.item, \"Guards\");\n    upgradeBuyCheckInner(oneItem.item, \"Toolkit\");\n    upgradeBuyCheckInner(oneItem.item, \"Wooden Pikes\");\n  }\n\n  function upgradeBuyCheckInner(string1, string2) {\n    if (string1 == string2) {\n      switch (string2) {\n        case \"Traps\": env.hasTraps = true;\n          return;\n        case \"Garden\": env.hasGarden = true;\n          return;\n        case \"Guards\": env.hasGuards = true;\n          return;\n        case \"Toolkit\": env.hasToolkit = true;\n          return;\n        case \"Wooden Pikes\": env.hasPikes = true;\n          return;\n      }\n    }\n  }\n\n  function gainFactionPoint(faction, point) {\n    env[faction] = env[faction] + point;\n    setEnv(env);\n  }\n\n  function charMessage(state, oneChar) {\n    switch (state) {\n      case \"tired\": messageBox[oneChar.index - 1] = \"I'm too tired for that!\";\n        break;\n      case \"wounded\": messageBox[oneChar.index - 1] = \"I have to recover first!\";\n        break;\n      case \"taken\": messageBox[oneChar.index - 1] = \"I'll do it.\";\n        break;\n      case \"left\": messageBox[oneChar.index - 1] = \"I'll do something else, I guess.\";\n        break;\n    }\n    SetForceRefresh(!ForceRefresh);\n    return \" \";\n  }\n\n  function clearMessageBox(num) {\n    messageBox[num - 1] = \" \";\n    SetForceRefresh(!ForceRefresh);\n  }\n\n  function gatherQuest() {\n    if (env.mainQuest1Clue1 && env.mainQuest1Clue2 && env.mainQuest1Clue3) { return console.log(\"mindMegvan\"); }\n    random = Math.floor(Math.random() * Math.floor(100));\n    if (random < 25) { return; }\n    if (!env.mainQuest1Clue1) { return env.mainQuest1Clue1 = true; }\n    if (!env.mainQuest1Clue2) { return env.mainQuest1Clue2 = true; }\n    if (!env.mainQuest1Clue3) { return env.mainQuest1Clue3 = true; }\n  }\n\n  function Fail() {\n    setFailNum(failNum + 1);\n  }\n\n  function Catch(quest, clue) {\n    if (failNum > 3) { return; }\n    if (quest == 1) {\n      questSingleUpdate(clue);\n      setEnv(env);\n    }\n  }\n\n  function questSingleUpdate(num) {\n    if (num == 1) { return setClueOne(\"Found\"); }\n    if (num == 2) { return setClueTwo(\"Found\"); }\n    if (num == 3) { return setClueThree(\"Found\"); }\n    if (num == 4) { return setClueFour(\"Found\"); }\n    if (num == 5) { return setClueFive(\"Found\"); }\n    if (num == 6) { return setClueSix(\"Found\"); }\n  }\n\n  function win(string) {\n    string === \"npc\" ? winInner(5, \"Better luck next time, lads!\")\n      : winInner(25, \"Good job! You showed 'em!\");\n    setFoughtAlready(true);\n    setEnv(env);\n  }\n\n  function winInner(num, string) {\n    env.Guards = env.Guards + num;\n    setQmSaysApp(string);\n  }\n\n  return (\n    <Router >\n      {menuShown && <MenuWindow newGame={newGame} loadGame={loadGame} saveGame={saveGame} menuClick={menuClick} />}\n      {endOfdayShown && <EndOfDayEvent char={endDayChar} quest={quest} gainFactionPoint={gainFactionPoint}\n        forceRefresh={ForceRefresh} rand2={rand2} endDone={endDone} nextRound={nextRound} gatherQuest={gatherQuest}\n        challengeSuccessfulStat={challengeSuccessfulStat} challengeFailStat={challengeFailStat}\n        rand={rand} updateStats={updateStats} buildings={villageBuilding} env={env} />}\n      <div>{numShown != \"0\" && (<CardDiv><CharCard increaseStat={increaseStat} Katt={() => setNumShown(0)} myContent={passedContent} /></CardDiv>)}</div>\n      <NextDayDiv>\n        <ButtonNextDay text=\"Advance time\" Clicked={AdvanceTime} />\n      </NextDayDiv>\n      <Frame>\n        <TopShelf>\n          <TopLeft>\n            <Menu menuClick={menuClick} />\n          </TopLeft>\n          <TopRight><Navi /></TopRight>\n        </TopShelf>\n        <MainBody>\n          <OverLay className={env.DayTime ? \"Day\" : \"Night\"} />\n          <Left>\n            <LeftUpper>\n              <Characters SideCharClick={SideCharClick} charlist={charList} ForceRefresh={ForceRefresh}\n                messageBox={messageBox} clearMessageBox={clearMessageBox} />\n            </LeftUpper>\n            <LeftLower>\n              <div>Number of Days: {env.nrOfDay}</div>\n              <div>{Day ? \"The sun is high on the sky\" : \"The moon shines palely\"}</div>\n              <div>Standing with the Villagers: {env.Villagers}</div>\n              <div>Standing with the Guild: {env.Guild}</div>\n              <div>Standing with the Guards: {env.Guards}</div>\n              <div>Gold: {env.Gold}</div>\n            </LeftLower>\n          </Left>\n          <Right>\n            <Switch>\n              <Route path=\"/tournament\">\n                <Tournament\n                  charList={charList} fightMain={mainFight}\n                  foughtAlready={foughtAlready} win={win}\n                  qmSaysApp={qmSaysApp}\n                />\n              </Route>\n              <Route path=\"/village\">\n                <Village\n                  charList={charList}\n                  clearMessageBox={clearMessageBox}\n                  buildings={villageBuilding}\n                  dropDownPlaceClicked={dropDownPlaceClicked}\n                  dropDownCharClicked={dropDownCharClicked}\n                  Day={Day}\n                  ForceRefresh={ForceRefresh}\n                  onClick={() => SetForceRefresh(!ForceRefresh)}\n                  env={env}\n                  inv={inv}\n                  purchase={purchase}\n                  charMessage={charMessage}\n                />\n              </Route>*/\n                  <Route path=\"/\">\n                <Camp\n                  env={env}\n                  dropDownPlaceClicked={dropDownPlaceClicked}\n                  dropDownCharClicked={dropDownCharClicked}\n                  Fail={Fail}\n                  Catch={Catch}\n                  clueOne={clueOne} clueTwo={clueTwo}\n                  clueThree={clueThree} clueFour={clueFour}\n                  clueFive={clueFive} clueSix={clueSix}\n                />\n              </Route>\n            </Switch>\n          </Right>\n        </MainBody>\n      </Frame>\n    </Router>\n  );\n}\n\nexport default App;","/home/patrik/PetProjekt/game/src/Menu.js",[],"/home/patrik/PetProjekt/game/src/CharCard.js",[],"/home/patrik/PetProjekt/game/src/Navi.js",[],"/home/patrik/PetProjekt/game/src/Camp.js",["135","136","137","138"],"/home/patrik/PetProjekt/game/src/Village.js",["139","140","141","142","143","144","145","146"],"import React from \"react\";\nimport DropDown from \"./DropDown\";\nimport { ItsClosed, BottomDv, ButtonDiv, Righty, Center, Title, OneBuilding, VillageDiv } from \"./styledCollection\"\nimport Shop from \"./Shop\"\nimport styled from \"styled-components\";\nimport { getHealth } from \"./Data/CharData/charStatFunctions\";\n\nconst PicStore = styled.div`\nheight: 15%;\n`;\n\nfunction Village(props) {\n    const { buildings, charList, dropDownCharClicked, charMessage, clearMessageBox,\n        dropDownPlaceClicked, Day, ForceRefresh, env, inv, purchase } = props\n\n    return (\n        <VillageDiv>\n            {buildings.slice(0, 3).map(OnePlace =>\n                <OneBuilding className={OnePlace.name} key={OnePlace.index}>\n                    <Center><Title>{OnePlace.name}</Title></Center>\n                    {OnePlace.name == \"Store\" && Day\n                        ? <PicStore><Shop env={env} inv={inv} purchase={purchase} /></PicStore>\n                        : <PicStore><div></div></PicStore>\n                    }\n                    {Day && OnePlace.name == \"Tavern\"\n                        || !Day && OnePlace.name == \"Store\"\n                        ? <ItsClosed> {OnePlace.desc3} </ItsClosed>\n                        : <ButtonDiv>\n                            {OnePlace.isQuestGiver &&\n                                <DropDown text=\"Questing\" OnePlace={OnePlace} charList={charList}\n                                    dropDownPlaceClicked={dropDownPlaceClicked}\n                                    dropDownCharClicked={dropDownCharClicked}\n                                    ForceRefresh={ForceRefresh}\n                                    Day={Day} clearMessageBox = {clearMessageBox}\n                                    passedOccupant={OnePlace.occupant1}\n                                    passedUsed={OnePlace.slot1}\n                                    buildings={buildings}\n                                    charMessage = {charMessage}\n                                    typ=\"Quest\"\n                                />}\n                            <DropDown text=\"Mingle\" OnePlace={OnePlace} charList={charList}\n                                dropDownPlaceClicked={dropDownPlaceClicked}\n                                dropDownCharClicked={dropDownCharClicked}\n                                ForceRefresh={ForceRefresh}\n                                Day={Day} clearMessageBox = {clearMessageBox}\n                                passedOccupant={OnePlace.occupant2}\n                                passedUsed={OnePlace.slot2}\n                                buildings={buildings}\n                                charMessage = {charMessage}\n                                typ=\"Ming\"\n                            />\n                        </ButtonDiv>}\n                    <BottomDv>\n                        <Center>{OnePlace.desc}</Center>\n                        <Righty>{OnePlace.desc2}</Righty>\n                    </BottomDv>\n                </OneBuilding>\n            )}\n        </VillageDiv>\n    )\n}\n\nexport default Village;","/home/patrik/PetProjekt/game/src/Characters.js",["147"],"import React, {useEffect, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {getHealth, getMaxHealth} from \"./Data/CharData/charStatFunctions\"\n\nconst FrameCharList = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n`;\n\nfunction Characters(props) {\n    const { charlist, SideCharClick, messageBox, clearMessageBox, ForceRefresh } = props\n    const [usedMessage, setUsedMessage] = useState(messageBox)\n\n    useEffect (() => {setUsedMessage(messageBox)}, [ForceRefresh])\n\n    return (\n        <>\n        <FrameCharList>\n                {charlist.map(iterated =>\n                (<div key={iterated.index}>\n                    <div onClick = {() => clearMessageBox(iterated.index)}> {usedMessage[iterated.index-1]} </div>\n                    <div onClick = {() => SideCharClick(iterated)}> {iterated.name} </div>\n                    <div>{getHealth(iterated)}/{getMaxHealth(iterated)}</div>\n                </div>\n                ))}\n        </FrameCharList>\n        </>\n    )\n}\n\nexport default Characters;","/home/patrik/PetProjekt/game/src/ButtonGeneric.js",[],"/home/patrik/PetProjekt/game/src/Button.js",[],"/home/patrik/PetProjekt/game/src/DropDown.js",["148","149","150","151","152","153","154"],"import React, {useEffect, useState} from \"react\";\nimport ButtonGeneric from \"./ButtonGeneric\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport {getHealth } from \"./Data/CharData/charStatFunctions\"\n\nconst DropDownDiv = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n`;\n\nconst Sides = styled.div`\ndisplay: flex;\nflex-direction: row;\njustify-content: space-around;\nalign-items: space-around;\nwidth: 20vh;\nheight: 20vh;\nflex-wrap: wrap;\nmargin-top: 10%;\n`;\n\nfunction DropDown (props) {\n    const {text, OnePlace, charList, charMessage, clearMessageBox,\n        dropDownCharClicked, dropDownPlaceClicked,\n        Day, ForceRefresh, typ, PassedOccupant, PassedUsed, buildings} = props\n    const [isShown, setIsShown] = useState(false)\n    const [usedList, setUsedList] = useState(charList)\n    const [Place, setPlace] = useState(OnePlace)\n    const [isUsed, setIsUsed] = useState(PassedUsed)\n    const [num, setNum] = useState(PassedOccupant)\n\n    useEffect (() => {setIsShown(false)}, [Day])\n    useEffect (() =>{setUsedList(charList)}, [ForceRefresh])\n    useEffect (() =>{setPlace(OnePlace)}, [ForceRefresh])\n    useEffect (() =>{typ == \"Ming\" ? setIsUsed(buildings[OnePlace.index-1].slot2)\n    : setIsUsed(buildings[OnePlace.index-1].slot1)}, [ForceRefresh])\n\n    useEffect (() =>{typ == \"Ming\" ? setNum(buildings[OnePlace.index-1].occupant2)\n    : setNum(buildings[OnePlace.index-1].occupant1)}, [ForceRefresh])\n\n    function DropDownClick() {\n        if (!isUsed) {\n        setIsShown(!isShown)\n    }\n        else {\n            dropDownPlaceClicked(num, typ, OnePlace);\n            clearMessageBox(num);\n        }\n    }\n    \n    function CharClicked(iterated, Place) {\n        if (getHealth(iterated) < 60) {\n            return charMessage(\"wounded\", iterated)\n        }\n        if (!iterated.rested) {\n            return charMessage(\"tired\", iterated);\n        }\n            charMessage(\"taken\", iterated);\n            dropDownCharClicked(iterated, Place, typ);\n            setIsShown(false);\n    }\n\n    return (\n        <DropDownDiv>\n        <ButtonGeneric text={isUsed ? usedList[num-1]?.classname\n        : text} Clicked={() => DropDownClick()} />\n        <Sides>{usedList.map(iterated =>\n                (<button className={iterated.occupies == -1\n                && isShown ? iterated.classnameSmall : \"Hidden\"} key={iterated.index}\n                onClick={() => CharClicked(iterated, Place)}>\n                    {iterated.classname}\n                </button>\n                ))}\n        </Sides>\n        </DropDownDiv>\n    )\n}\n\nexport default DropDown;","/home/patrik/PetProjekt/game/src/styledCollection.js",[],"/home/patrik/PetProjekt/game/src/ButtonNextDay.js",[],"/home/patrik/PetProjekt/game/src/EndOfDayEvent.js",["155","156","157","158","159","160","161","162","163","164","165","166","167","168"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport ButtonGeneric from \"./ButtonGeneric\";\nimport { questStarted, questDoneText, found, challenges, challengesSuccess, challengeFail, success, fail } from \"./QuestAndEnemy/QuestV2\";\nimport { racialBonus, getHealth, getMaxHealth } from \"./Data/CharData/charStatFunctions\";\n\nconst Blocker = styled.div`\nposition: absolute;\nbackground-color: rgba(100,100,100,0.4);\nheight: 100%;\nwidth: 99%;\nz-index: 6;\n`;\n\nconst BlockerMini = styled.div`\nposition: absolute;\nbackground-color: grey;\nheight: 100%;\nwidth: 100%\n`;\n\nconst RestDiv = styled.div`\ndisplay: flex;\nheight: 55%;\nflex-direction: column;\njustify-content: space-between;\nalign-items: center;\n`;\n\nconst QuestDiv = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n`;\n\nconst QuestItem = styled.div`\ntext-align: center;`\n\nconst FrameEndDay = styled.div`\nborder: 1vh black solid;\nposition: absolute;\nmargin-top: 10%;\nmargin-left: 35%;\nwidth: 40%;\nheight: 50%;\nbackground-color: grey;\nz-index: 7;\ndisplay: flex;\nflex-direction: column;\n`;\n\nconst FrameQuest = styled.div`\ndisplay: flex;\nflex-direction: column;\nflex: 2;\n`;\n\nconst PicHolderDiv = styled.div`\ndisplay: flex;\nflex: 4;\nbackground-color: grey;\n`;\n\nfunction EndOfDayEvent(props) {\n    const { char, gatherQuest, quest, gainFactionPoint, forceRefresh,\n        updateStats, challengeSuccessfulStat, challengeFailStat, buildings, endDone, nextRound, env } = props\n    const [challenge, setChallenge] = useState(false)\n    const [shown, IsShown] = useState(false)\n    const [chalSuccess, setSuccess] = useState(false)\n    const [usedQuest, setUsedQuest] = useState(quest);\n    const [oneChar, setOneChar] = useState(char);\n    const [usedRand, setUsedRand] = useState()\n    const [updating, setUpdating] = useState(false)\n    const [checkedStat, setCheckedStat] = useState();\n    const [usedEnv, setUsedEnv] = useState(env)\n    const [enemy, setEnemy] = useState();\n    const [giver, setGiver] = useState();\n    const [recipent, setRecipent] = useState();\n    const [area, setArea] = useState();\n    const [challengeDone, setChallengeDone] = useState(false)\n\n    useEffect(() => { setUsedQuest(quest) }, [forceRefresh])\n    useEffect(() => { setOneChar(char) }, [forceRefresh])\n\n    let random;\n\n    function challengeAccepted(oneCharAcc, usedQuest) {\n        random = Math.floor(Math.random() * Math.floor(3))\n        setUsedRand(random + 1)\n        setChallenge(true);\n        IsShown(true);\n        questSetter(oneCharAcc, usedQuest, true);\n    }\n\n\n    function CheckedStatChecker(string, oneCharAcc, usedQuest) {\n        if (string == \"hermit\") {\n            statCheckerToSuccessChecker(\"intelligence\", oneCharAcc, usedQuest);\n            return;\n        }\n        if (string == \"thief\") {\n            statCheckerToSuccessChecker(\"dexterity\", oneCharAcc, usedQuest);\n            return;\n        }\n        statCheckerToSuccessChecker(\"strength\", oneCharAcc, usedQuest);\n\n    }\n\n    function statCheckerToSuccessChecker(statType, oneCharAcc, usedQuest) {\n        setCheckedStat(statType);\n        SuccessChecker(oneCharAcc, statType, usedQuest)\n    }\n\n    function SuccessChecker(oneCharCheck, stat, usedQuest) {\n        if (oneCharCheck[stat] + racialBonus(oneCharCheck.race, stat) > usedQuest.checkedStat) {\n            setSuccess(true);\n            setChallengeDone(true);\n            challengeSuccessfulStat(oneCharCheck, usedQuest, 75, 25, -20);\n            return;\n        }\n        else {\n        setSuccess(false);\n        setChallengeDone(true);\n        challengeFailStat(oneCharCheck, usedQuest)}\n    }\n\n    function challengeSkipped(oneCharSk, usedQuest) {\n        questSetter(oneCharSk, usedQuest, false);\n    }\n\n    function questSetter(oneChar, usedQuest, bool) {\n        setRecipent(oneChar.name);\n        random = Math.floor(Math.random() * Math.floor(3))\n        setArea(usedQuest.areas[random]);\n        random = Math.floor(Math.random() * Math.floor(3))\n        setGiver(buildings[oneChar.occupies - 1].giver);\n        random = Math.floor(Math.random() * Math.floor(3))\n        setEnemy(usedQuest.enemies[random]);\n        if (bool == true) {\n            CheckedStatChecker(usedQuest.enemies[random], oneChar, usedQuest)\n            return;\n        }\n        else {\n            IsShown(true);\n            setChallenge(false);\n            challengeSuccessfulStat(oneChar, usedQuest, 0, 0, -20);\n        }\n    }\n\n    function nextOne(oneChar) {\n        setUpdating(true);\n        setChallenge(false);\n        setChallengeDone(false);\n        IsShown(false)\n        if (oneChar.index != 4) {\n            updateStats(oneChar)\n            nextRound(oneChar)\n            setUpdating(false);\n        }\n        else {\n            setUpdating(false);\n            updateStats(oneChar);\n            endDone();\n        }\n    }\n\n    function resting(oneChar) {\n        getHealth(oneChar) < getMaxHealth(oneChar) - 31\n            ? oneChar.health = oneChar.health + 30\n            : oneChar.health = oneChar.maxHealth;\n        nextOne(oneChar)\n    }\n\n    function mingling(oneChar) {\n        if (oneChar.occupies != 2) {\n            if (oneChar.charisma + racialBonus(oneChar.race, \"charisma\") > 7) {\n                gainFactionPoint(\"Villagers\", 20)\n            } else {\n                gainFactionPoint(\"Villagers\", 5)\n            }\n        }\n        else {\n            if (oneChar.charisma + racialBonus(oneChar.race, \"charisma\") > 7) {\n                gainFactionPoint(\"Guild\", 20)\n            } else {\n                gainFactionPoint(\"Guild\", 5)\n            }\n        }\n        gatherQuest()\n        nextOne(oneChar)\n    }\n\n    return (\n        <div>\n            <FrameEndDay>\n                <PicHolderDiv />\n                <FrameQuest>\n                    {updating && <BlockerMini />}\n                    {oneChar.Questing == \"Ming\" && !updating\n                        && (<RestDiv>\n                            <div>{oneChar.name} mingles with the locals.</div>\n                            <ButtonGeneric text=\"I see.\" Clicked={() => mingling(oneChar)} />\n                        </RestDiv>\n                        )}\n                    {oneChar.Questing == \" \" && !updating\n                        && (<RestDiv>\n                            <div>{oneChar.name} rests now.</div>\n                            <ButtonGeneric text=\"I see.\" Clicked={() => resting(oneChar)} />\n                        </RestDiv>\n                        )}\n                    {oneChar.Questing == \"Quest\" && !shown && !updating &&\n                        <RestDiv>\n                            <div> {questStarted(oneChar.name, quest.areas[Math.floor(Math.random() * Math.floor(3))])} </div>\n                            <div><ButtonGeneric text=\"Attempt challenge\" Clicked={() => challengeAccepted(oneChar, usedQuest)} /></div>\n                            <div><ButtonGeneric text=\"Avoid challenge\" Clicked={() => challengeSkipped(oneChar, usedQuest)} /></div>\n                        </RestDiv>}\n                    <QuestDiv>\n                        {shown && challenge &&\n                            <QuestItem>\n                                <div> {found(enemy, recipent, giver)} </div>\n                                <div> {challenges(enemy, recipent, usedRand)} </div>\n                                <div>\n                                    {chalSuccess\n                                        ? <div>\n                                            <div> {challengesSuccess(enemy, recipent, usedRand)} </div>\n                                            <div> {success(enemy, recipent, giver)} </div>\n                                        </div>\n                                        : <div>\n                                            <div> {challengeFail(enemy, recipent, usedRand)} </div>\n                                            <div> {fail(enemy, recipent)} </div>\n                                        </div>\n                                    }\n                                </div>\n                            </QuestItem>\n                        }\n                        {shown && (!challenge || challengeDone) && <QuestItem>\n                            <div>\n                                {questDoneText(recipent, giver)}\n                            </div>\n                            <div>\n                                <ButtonGeneric text=\"I see.\" Clicked={() => nextOne(oneChar)} />\n                            </div>\n                        </QuestItem>}\n                    </QuestDiv>\n                </FrameQuest>\n            </FrameEndDay>\n            <Blocker />\n        </div>\n    )\n}\n\nexport default EndOfDayEvent;","/home/patrik/PetProjekt/game/src/QuestAndEnemy/QuestV2.js",["169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189"],"const Quest = {\n    rewardGold: 200,\n    rewardXp: 25,\n    hpLoss: 40,\n    checkedStat: 5,\n    areas: [\"the hills\", \"the woods\", \"the fields\",],\n    enemies: [\"hermit\", \"thief\", \"wolf\",],\n}\n\nfunction questStarted(recipent, area) { return \"\" + recipent + \" has left for \" + area + \".\" }\nfunction questDoneText(recipent, giver) { return \"\" + recipent + \" has returned from the quest given by \" + giver + \".\" }\n\nfunction found(enemy, recipent, giver) {\n    switch (enemy) {\n        case \"hermit\": return recipent + \" has come across a hermit playing with the trinkets the \" +\n            giver + \" needs. The hermit values wits and wisdom above all. He waves at \" +\n            recipent + \" and asks,\";\n        case \"wolf\": return \"\" + recipent + \" has come across an angry-looking wolf near the marked tree stump.\";\n        case \"thief\": return \"\" + recipent + \" has found a young man sitting by the chest the \" + giver + \" needs. The young man waves at \" + recipent\n            + \" to come closer.\"\n    }\n}\n\nfunction challenges(enemy, recipent, num) {\n    switch (enemy) {\n        case \"hermit\": switch (num) {\n            case 1: return \"'What breaks yet never falls, and what falls yet never breaks?' asks the hermit.\";\n            case 2: return \"'What goes through cities and fields, but never moves?' asks the hermit.\";\n            case 3: return \"'I have lakes with no water, mountains with no stone and cities with no buildings. What am I?' asks the hermit.\";\n        }\n        case \"wolf\": switch (num) {\n            case 1: return \"The wolf snarls as it circles around \" + recipent + \". There is hunger in its golden-eyes. All of a sudden, it leaps!\";\n            case 2: return \"\" + recipent + \" notices how full the wolf's belly is. Also, there is a red, hooded cape not so far from them. It must have belonged to the wolf's previous prey.\"    \n            case 3: return \"As \" + recipent + \" takes a second, closer look, it becomes evident the wolf is protecting its litter of pups. Knowing it's better to end them while they are small, \"\n            + recipent + \" tries to end the wolf and the pups.\"\n        }\n        case \"thief\": switch (num) {\n            case 1: return \"The man invites \" + recipent + \" to a game of cards with an innocent smile.\"\n            case 2: return \"Just as \" + recipent + \"steps closer, the man gets to his feet, and reaches for a handbow.\"\n            case 3: return \"The man, grateful to finally have a companion, offers \" + recipent + \" a drink.\"\n        }\n    }\n}\n\nfunction challengesSuccess(enemy, recipent, num) {\n    switch (enemy) {\n        case \"hermit\": switch (num) {\n            case 1: return \"'The day, and the night,' says \" + recipent + \". \\n The hermit nods his head in approval, and hands \" + recipent + \" the trinkets sought.\"\n            case 2: return \"'A road,' says \" + recipent + \". \\n The hermit nods his head in approval, and hands \" + recipent + \" the trinkets sought.\"\n            case 3: return \"'A map,' says \" + recipent + \". \\n The hermit nods his head in approval, and hands \" + recipent + \" the trinkets sought.\"\n        }\n        case \"wolf\": switch (num) {\n            case 1: return \"\" + recipent + \" manages not only to avoid the vicious wolf, but also to end its miserable life.\"\n            case 2: return \"\" + recipent + \" slays the wolf, and cuts open its belly. Behold! A young girl and her grandmother emerge!\"\n            case 3: return \"\" + recipent + \" kills the wolf quickly, and then takes care of the wolflings. They try to fight back, alas, to no avail.\"\n        }\n        case \"thief\": switch (num) {\n            case 1: return \"\" + recipent + \" catches the man cheating, and quickly chases him away.\"\n            case 2: return \"\" + recipent + \" dodges the shot, and knocks out the man.\"\n            case 3: return \"\" + recipent + \" is quick to change mugs when the man glances aside. Soon, the vagabound is put to sleep by his own poison.\"\n        }\n    }\n}\n\nfunction challengeFail(enemy, recipent, num) {\n    switch (enemy) {\n        case \"hermit\": switch (num) {\n            case 1: return \"'I haven't the slightest clue,' admits \" + recipent + \". \\n The hermit shrieks and hexes \" + recipent + \". Then, he vanishes into thin air.\"\n            case 2: return \"'Give me a break, old man!' \" + recipent + \"exclaims. \\n The hermit shrieks and hexes \" + recipent + \". Then, he vanishes into thin air.\"\n            case 3: return \"'A delusional hermit?'\" + recipent + \" asks. \\n The hermit shrieks and hexes \" + recipent + \". Then, he vanishes into thin air.\"\n        }\n        case \"wolf\": switch (num) {\n            case 1: return \"The wolf's teeth leave a bloody mark, and \" + recipent + \" decides to flee. It's pointless to linger around for another!\"\n            case 2: return \"The wolf, despite its enormous belly slowing it down, manages to chase \" + recipent + \" away.\"\n            case 3: return \"Driven by instinct to protect the little ones, the wolf bites and scratches relentlessly, chasing \" + recipent + \" away.\"\n        }\n        case \"thief\": switch (num) {\n            case 1: return \"\" + recipent + \" loses the game, but has no coin to pay, and is chased away by the enraged man.\"\n            case 2: return \"The shot hits, but \" + recipent + \" manages to get away, albeit with a nasty wound.\"\n            case 3: return \"\" + recipent + \" takes a swig of the drink, and feels ill. Seeing the smug smirk on the man's lips, \" + recipent + \" chases him away, but soon falls unconscious.\"\n        }\n    }\n\n}\n\nfunction success(enemy, recipent, giver){\n    switch(enemy) {\n        case \"hermit\": return \"\" + recipent + \" returns with the trinkets sought.\"\n        case \"thief\": return  \"\" + recipent + \"takes the chest back to the \" + giver + \".\";\n        case \"wolf\": return  \"\" + recipent + \" takes the dead-drop hidden in the stump back to the \" + giver + \".\";\n    }\n}\n\nfunction fail(enemy, recipent){\n    switch(enemy) {\n        case \"hermit\": return \"\" + recipent + \" fails to find the trinkets.\"\n        case \"thief\": return  \"\" + recipent + \" finds the chest, but it has been forced open, its treasures gone.\";\n        case \"wolf\": return  \"\" + recipent + \" fails to find the dead-drop.\";\n    }\n}\n\nexport {Quest, questDoneText, questStarted, found, challenges, challengesSuccess, challengeFail, success, fail};","/home/patrik/PetProjekt/game/src/Data/CharData/charStatFunctions.js",["190"],"import {raceBase} from \"../EnvData/races\"\n\nfunction racialBonus(Race, Stat) {\n    switch(Race) {\n        case \"Human\": return raceBase.human[Stat]\n        case \"Elf\": return raceBase.elf[Stat];\n        case \"Dwarf\": return raceBase.dwarf[Stat];\n        case \"Fay\": return raceBase.fay[Stat];\n    }\n}\n\nfunction getMaxHealth(char) {\n    let answer = char.maxHealth + char.lvl * 10 + char.constitution * 5 + racialBonus(char.race, \"maxHealth\")\n    return answer;\n}\n\nfunction getHealth(char) {\n    return Math.floor(char.health + char.lvl * 10 + char.constitution * 5 + racialBonus(char.race, \"maxHealth\"));   \n}\n\nfunction getCritChance(char) {\n    return char.classname !== \"Mage\" ? char.dexterity * 3 + racialBonus(char.race, \"critChance\") : 0;\n}\n\nfunction getEvadeChance(char) {\n    return char.dexterity * 3 + racialBonus(char.race, \"evadeChance\")\n}\n\nfunction getMitigation(char) {\n    return char.constitution * 3 + racialBonus(char.race, \"mitigation\")\n}\n\nfunction getBlockChance(char) {\n    return char.constitution * 1 + char.strength * 2 + racialBonus(char.race, \"blockChance\");\n}\n\nfunction getDmgOutGoing(char) {\n    let random = Math.floor(Math.random() * 100);\n    let random2 = Math.floor(Math.random() * 15)\n    let dmg = char.classname !== \"Mage\"\n    ? racialBonus(char.race, \"baseDmg\") + char.strength * 2 + char.dexterity * 1\n    : racialBonus(char.race, \"baseDmg\") + char.intelligence * 3 + char.charisma * 2;\n    let critDmg = dmg * 3;\n\n    return random < getCritChance(char) ? critDmg + random2 : dmg + random2;\n}\n\nfunction getMagicOutGoing(char) {\n    return racialBonus(char.race, \"intelligence\") + char.intelligence * 5\n}\n\nfunction getDmgIncoming(char, dmg) {\n    let random = Math.floor(Math.random() * 100)\n    let random2 = Math.floor(Math.random() * 15)\n    let dmgTaken = dmg * (100 - getMitigation(char) - racialBonus(char.race, \"mitigation\")) / 100;\n\n    return random < getBlockChance(char) ? 0 : dmgTaken - random2;\n}\n\nexport {racialBonus, getBlockChance, getCritChance,\n    getDmgIncoming, getDmgOutGoing, getEvadeChance,\n    getMaxHealth, getMitigation, getHealth, getMagicOutGoing}","/home/patrik/PetProjekt/game/src/Data/EnvData/races.js",[],"/home/patrik/PetProjekt/game/src/Tournament.js",[],"/home/patrik/PetProjekt/game/src/Shop.js",["191","192","193","194","195","196"],"/home/patrik/PetProjekt/game/src/Data/EnvData/items.js",[],"/home/patrik/PetProjekt/game/src/CampQuest.js",["197","198","199"],"/home/patrik/PetProjekt/game/src/QuestAndEnemy/MainQuest1.js",[],"/home/patrik/PetProjekt/game/src/CombatModule.js",["200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219"],"import { fireEvent } from \"@testing-library/react\";\nimport React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport ButtonGeneric from \"./ButtonGeneric\"\nimport { getDmgIncoming, getDmgOutGoing, getHealth, getMagicOutGoing, getMaxHealth, racialBonus } from \"./Data/CharData/charStatFunctions\";\n\nconst FightFrame = styled.div`\ndisplay: flex;\nwidth: 100%;\nflex-direction: column;\nalign-item: center;\njustify-content: space-between;\n`;\n\nconst FightTitle = styled.div`\ndisplay: flex;\nflex-direction: row;\njustify-content: space-around;\nfont-size: 4vh;\nflex: 1;\n`;\n\nconst FightBody = styled.div`\ndisplay: flex;\nflex: 5;\nflex-direction: row;\njustify-content: space-between;\n`;\n\nconst SideList = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n`;\n\nconst FightFooter = styled.div`\nwidth: 100%;\ndisplay: flex;\njustify-content: space-around;\nflex:4;\n`;\n\nconst FightContainer = styled.div`\ndisplay: flex;\nwidth: 100%;\nflex-direction: row;\njustify-content: space-around\n`;\n\nconst ButtonResizer = styled.div`\nheight: 60%;\n`;\n\nconst ActionButtons = styled.div`\ndisplay: flex;\nflex-direction: column;\n`;\n\nconst TargetButtons = styled.div`\ndisplay: flex;\nflex-direction: column;\n`;\n\nconst LogResizer = styled.div`\ndisplay: flex;\nflex-direction: column;\n`;\n\nconst NpcTurnDiv = styled.div`\nflex: 3;\n`;\n\nconst NpcButtonDiv = styled.div`\nmargin-left: 80%;\n`;\n\nfunction CombatModule(props) {\n    const { fighterNum, fighterList, fighterIndex, indexSetter, playerChar, playerSetter, fightSetter, fightLog,\n        logSetter, foeList, setAllies, setEnemies, foeCount, foeCountSetter, allyCount, allyCountSetter, win } = props\n    const [allyList, setAllyList] = useState(fighterList);\n    const [enemyList, setEnemyList] = useState(foeList);\n    const [combat, setCombat] = useState(false)\n    const [allyCounter, setAllyCounter] = useState(allyCount);\n    const [foeCounter, setFoeCounter] = useState(foeCount);\n    const [refresherLocal, setRefresherLocal] = useState(false);\n    const [playerTurn, setPlayerTurn] = useState(false)\n    const [fighterIndexLocal, setFighterIndexLocal] = useState(fighterIndex)\n    const [npcTurn, setNpcTurn] = useState(false)\n    const [playerAction, setPlayerAction] = useState(\" \");\n    const [playerTarget, setPlayerTarget] = useState(\" \");\n    const [hasAction, setHasAction] = useState(false);\n    const [hasTarget, setHasTarget] = useState(false);\n\n    let combatList = [...fighterList];\n    combatList = combatList.concat(enemyList);\n    combatList = combatList.sort((a, b) => (a.dexterity + racialBonus(a.race, \"dexterity\") < b.dexterity + racialBonus(b.race, \"dexterity\") ? 1 : -1))\n\n    let tempLog;\n\n    let allies = fighterList;\n    let enemies = foeList;\n    let mockIndex = fighterIndexLocal;\n\n    let playerCharLocal = playerChar;\n\n    useEffect(() => { setFighterIndexLocal(fighterIndex) }, [refresherLocal])\n\n    useEffect(() => { setAllyCounter(allyCount) }, [refresherLocal])\n    useEffect(() => { setFoeCounter(foeCount) }, [refresherLocal])\n\n    useEffect(() => { setAllyList(allies) }, [refresherLocal])\n    useEffect(() => { setEnemyList(enemies) }, [refresherLocal])\n\n    function woundedAction(currentFighter) {\n        currentFighter.health = currentFighter.health + 25;\n        tempLog = [combatLog(\"\" + currentFighter.name + \" drinks a health potion.\")].concat(fightLog);\n        logSetter(tempLog);\n    }\n\n    function woundedCheck(currentFighter) {\n        return Math.floor((getMaxHealth(currentFighter) - getHealth(currentFighter)) / getMaxHealth(currentFighter)) * 100;\n    }\n\n    function faintCheck(fighter) {\n        if (getHealth(fighter) < getMaxHealth(fighter) / 5) {\n            fighter.pc == true ? allyCountSetter(allyCount - 1) : foeCountSetter(foeCount - 1);\n            tempLog = [combatLog(\"\" + fighter.name + \" faints.\")].concat(fightLog);\n            logSetter(tempLog);\n        }\n    }\n\n    function combatLog(message) {\n        return message;\n    }\n\n    function combatOneFighter() {\n        winChecker();\n        setCombat(true);\n        if (getHealth(combatList[mockIndex]) < getMaxHealth(combatList[mockIndex]) / 5) {\n            return Done() }\n        let currentFighter = combatList[mockIndex];\n        playerSetter(currentFighter)\n        currentFighter.pc ? playerTurnFn(currentFighter) : npcTurnFn(currentFighter);\n    }\n\n    function playerTurnFn() {\n        setPlayerAction(\" \");\n        setPlayerTarget(\" \")\n        setPlayerTurn(true);\n        setNpcTurn(false);\n    }\n\n    function playerDone() {\n        if (!hasTarget) {return;}\n        if (!hasAction) {return;}\n        doPlayerAction()\n        setHasAction(false);\n        setHasTarget(false);\n        Done();\n    }\n\n    function doPlayerAction() {\n        playerAction == \"Heal\" ? heal(playerChar, playerTarget) : attack(playerChar, playerTarget);\n    }\n\n    function playerActionSelect(string) {\n        setPlayerAction(string)\n        setPlayerTarget(\" \")\n        setHasTarget(false)\n        setHasAction(true)\n    }\n\n    function playerTargetSelect(target) {\n        if (getHealth(target) < getMaxHealth(target) / 5) {\n            return}\n        setPlayerTarget(target)\n        setHasTarget(true)\n    }\n\n    function Done() {\n        nextOne();\n        let check = winChecker()\n        if (check.win == false) {return combatOneFighter();}\n        check.side == \"npc\" ? win(\"npc\") : win(\"pc\");\n        fightSetter(false);\n    }\n\n    function nextOne() {\n        if (mockIndex == combatList.length - 1) {\n            mockIndex = 0;\n            indexSetter(0)\n        }\n        else {\n            indexSetter(mockIndex + 1)\n            mockIndex = mockIndex + 1;\n        }\n        setAllies(allies);\n        setEnemies(enemies);\n        setRefresherLocal(!refresherLocal)\n    }\n\n    function winChecker() {\n        let check = {win: false, side: \"none\"}\n        if (allyCounter === 0) {\n            check.win = true;\n            check.side = \"npc\";\n            return check;\n        }\n        if (foeCounter === 0) {\n            check.win = true;\n            check.side = \"pc\";\n            return check;\n        }\n        return check;\n    }\n\n    function npcTurnFn(currentFighter) {\n        setPlayerTurn(false)\n        setNpcTurn(true);\n        if (woundedCheck(currentFighter) > 70) {\n            woundedAction(currentFighter)\n        }\n        else {\n            npcNotWoundedBranch(currentFighter)\n        }\n    }\n\n    function npcNotWoundedBranch(currentFighter) {\n        let decisionWeighter = whatToDo(currentFighter);\n        let targetAttack = combatList.filter(element => element.index == decisionWeighter.attack.id)\n        targetAttack = targetAttack[0];\n        let targetHeal = combatList.filter(element => element.index == decisionWeighter.heal.id)\n        targetHeal = targetHeal[0];\n        decisionWeighter.attack.weight > decisionWeighter.heal.weight ? attack(currentFighter, targetAttack, combatList) : heal(currentFighter, targetHeal);\n    }\n\n    function heal(currentFighter, targetHeal) {\n        let healDone = getMagicOutGoing(currentFighter);\n        targetHeal.health < targetHeal.maxHealth - healDone ?\n            targetHeal.health = targetHeal.health + healDone : targetHeal.health = targetHeal.maxHealth;\n        tempLog = [combatLog(\"\" + currentFighter.name + \" heals \" + targetHeal.name + \"for \" + healDone)].concat(fightLog);\n        logSetter(tempLog);\n    }\n\n    function attack(attacker, victim) {\n        let dmg = getDmgOutGoing(attacker)\n        let inc = getDmgIncoming(victim, dmg);\n        victim.health = victim.health - inc;\n        setRefresherLocal(!refresherLocal)\n        tempLog = [combatLog(\"\" + attacker.name + \" attacks \" + victim.name + \", dealing \" + inc + \" dmg.\")].concat(fightLog);\n        logSetter(tempLog)\n        faintCheck(victim);\n    }\n\n    function whatToDo(fighter) {\n        let answer = { attack: { id: 0, weight: 65 }, heal: { id: 0, weight: 0, } }\n        let enemies = livingAvailableSideCheckAttack(true)\n        answer.attack.id = enemies[0].index;\n        let allies = livingAvailableSideCheckHeal(false);\n        answer.heal.id = allies[0].index;\n        let healWeight = Math.floor((getMaxHealth(allies[0]) - getHealth(allies[0])) / getMaxHealth(allies[0])) * 100;\n        answer.heal.weight = parseInt(healWeight);\n        answer.heal.weight = answer.heal.weight + ((fighter.intelligence - fighter.strength) * 10);\n        return answer\n    }\n\n    function livingAvailableSideCheckAttack(bool) {\n        return combatList.filter(enemyFighter => enemyFighter.pc === bool).\n            filter(livingEnemyFighter => getHealth(livingEnemyFighter) > getMaxHealth(livingEnemyFighter) / 5).\n            sort((a, b) => (getHealth(a) > getHealth(b) ? 1 : -1));\n    }\n\n    function livingAvailableSideCheckHeal(bool) {\n        return combatList.filter(friendlyFighter => friendlyFighter.pc === bool).\n            filter(livingEnemyFighter => getHealth(livingEnemyFighter) > getMaxHealth(livingEnemyFighter) / 5).\n            sort((a, b) => ((getHealth(a) / getMaxHealth(a)) * 100 > (getHealth(b) / getMaxHealth(b)) * 100 ? 1 : -1));\n    }\n\n    return (\n        <FightFrame>\n            <FightTitle>{fighterNum} vs {fighterNum}</FightTitle>\n            <FightBody>\n                <SideList>{allyList.map(element => (<div key={element.index}><div>{element.name}</div><div>{getHealth(element)}/{getMaxHealth(element)}</div></div>))}</SideList>\n                <SideList>{enemyList.map(enemy => (<div key={enemy.index}><div>{enemy.name}</div><div>{getHealth(enemy)}/{getMaxHealth(enemy)}</div></div>))}</SideList>\n            </FightBody>\n            {!combat && <FightFooter>\n                <ButtonResizer><ButtonGeneric text=\"Prove Your Worth!\" Clicked={() => combatOneFighter()} /></ButtonResizer>\n            </FightFooter>}\n            {combat && <FightFooter>\n                {playerTurn && <FightContainer>\n                    <ActionButtons>\n                        <ButtonResizer><ButtonGeneric text = \"Attack\" Clicked = {() => playerActionSelect(\"Attack\")}/></ButtonResizer>\n                        <ButtonResizer><ButtonGeneric text = \"Heal\" Clicked = {() => playerActionSelect(\"Heal\")}/></ButtonResizer>\n                    </ActionButtons>\n                    <TargetButtons>\n                        {playerAction == \"Heal\" &&\n                            allies.map(element => (<ButtonResizer key = {element.index+21}><ButtonGeneric text={element.name} Clicked={() => playerTargetSelect(element)} /></ButtonResizer>))}\n                        {playerAction == \"Attack\" &&\n                            enemies.map(element => (<ButtonResizer key = {element.index+34}><ButtonGeneric text={element.name} Clicked={() => playerTargetSelect(element)} /></ButtonResizer>))}\n                    </TargetButtons>\n                    <ButtonResizer><ButtonGeneric text=\"PlayerDone\" Clicked={() => playerDone()} /></ButtonResizer>\n                </FightContainer>}\n                {npcTurn && <NpcTurnDiv><NpcButtonDiv><ButtonGeneric text=\"NpcDone\" Clicked={() => Done()} /></NpcButtonDiv></NpcTurnDiv>}\n                <LogResizer>{fightLog.slice(0, 5).map(log => <div key={log}>{log}</div>)}</LogResizer>\n            </FightFooter>}\n        </FightFrame>\n    )\n}\n\nexport default CombatModule;","/home/patrik/PetProjekt/game/src/MenuWindow.js",[],{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":38,"column":17,"nodeType":"226","messageId":"227","endLine":38,"endColumn":25},{"ruleId":"224","severity":1,"message":"228","line":40,"column":10,"nodeType":"226","messageId":"227","endLine":40,"endColumn":21},{"ruleId":"224","severity":1,"message":"229","line":40,"column":23,"nodeType":"226","messageId":"227","endLine":40,"endColumn":37},{"ruleId":"224","severity":1,"message":"230","line":42,"column":16,"nodeType":"226","messageId":"227","endLine":42,"endColumn":23},{"ruleId":"224","severity":1,"message":"231","line":43,"column":17,"nodeType":"226","messageId":"227","endLine":43,"endColumn":25},{"ruleId":"224","severity":1,"message":"232","line":53,"column":21,"nodeType":"226","messageId":"227","endLine":53,"endColumn":33},{"ruleId":"233","severity":1,"message":"234","line":88,"column":30,"nodeType":"235","messageId":"236","endLine":88,"endColumn":32},{"ruleId":"233","severity":1,"message":"234","line":124,"column":14,"nodeType":"235","messageId":"236","endLine":124,"endColumn":16},{"ruleId":"233","severity":1,"message":"234","line":140,"column":47,"nodeType":"235","messageId":"236","endLine":140,"endColumn":49},{"ruleId":"237","severity":1,"message":"238","line":177,"column":55,"nodeType":"239","messageId":"240","endLine":177,"endColumn":56},{"ruleId":"233","severity":1,"message":"234","line":177,"column":98,"nodeType":"235","messageId":"236","endLine":177,"endColumn":100},{"ruleId":"237","severity":1,"message":"238","line":184,"column":63,"nodeType":"239","messageId":"240","endLine":184,"endColumn":64},{"ruleId":"241","severity":1,"message":"242","line":242,"column":5,"nodeType":"243","messageId":"244","endLine":270,"endColumn":6},{"ruleId":"233","severity":1,"message":"234","line":294,"column":30,"nodeType":"235","messageId":"236","endLine":294,"endColumn":32},{"ruleId":"233","severity":1,"message":"234","line":303,"column":22,"nodeType":"235","messageId":"236","endLine":303,"endColumn":24},{"ruleId":"233","severity":1,"message":"234","line":328,"column":17,"nodeType":"235","messageId":"236","endLine":328,"endColumn":19},{"ruleId":"241","severity":1,"message":"242","line":329,"column":7,"nodeType":"243","messageId":"244","endLine":340,"endColumn":8},{"ruleId":"241","severity":1,"message":"242","line":350,"column":5,"nodeType":"243","messageId":"244","endLine":359,"endColumn":6},{"ruleId":"233","severity":1,"message":"234","line":384,"column":15,"nodeType":"235","messageId":"236","endLine":384,"endColumn":17},{"ruleId":"233","severity":1,"message":"234","line":391,"column":13,"nodeType":"235","messageId":"236","endLine":391,"endColumn":15},{"ruleId":"233","severity":1,"message":"234","line":392,"column":13,"nodeType":"235","messageId":"236","endLine":392,"endColumn":15},{"ruleId":"233","severity":1,"message":"234","line":393,"column":13,"nodeType":"235","messageId":"236","endLine":393,"endColumn":15},{"ruleId":"233","severity":1,"message":"234","line":394,"column":13,"nodeType":"235","messageId":"236","endLine":394,"endColumn":15},{"ruleId":"233","severity":1,"message":"234","line":395,"column":13,"nodeType":"235","messageId":"236","endLine":395,"endColumn":15},{"ruleId":"233","severity":1,"message":"234","line":396,"column":13,"nodeType":"235","messageId":"236","endLine":396,"endColumn":15},{"ruleId":"233","severity":1,"message":"245","line":418,"column":22,"nodeType":"235","messageId":"236","endLine":418,"endColumn":24},{"ruleId":"224","severity":1,"message":"246","line":1,"column":27,"nodeType":"226","messageId":"227","endLine":1,"endColumn":36},{"ruleId":"224","severity":1,"message":"247","line":5,"column":7,"nodeType":"226","messageId":"227","endLine":5,"endColumn":12},{"ruleId":"224","severity":1,"message":"248","line":76,"column":17,"nodeType":"226","messageId":"227","endLine":76,"endColumn":23},{"ruleId":"224","severity":1,"message":"249","line":77,"column":18,"nodeType":"226","messageId":"227","endLine":77,"endColumn":25},{"ruleId":"224","severity":1,"message":"250","line":6,"column":10,"nodeType":"226","messageId":"227","endLine":6,"endColumn":19},{"ruleId":"233","severity":1,"message":"234","line":21,"column":36,"nodeType":"235","messageId":"236","endLine":21,"endColumn":38},{"ruleId":"251","severity":1,"message":"252","line":25,"column":26,"nodeType":"253","messageId":"254","endLine":25,"endColumn":28},{"ruleId":"233","severity":1,"message":"234","line":25,"column":43,"nodeType":"235","messageId":"236","endLine":25,"endColumn":45},{"ruleId":"251","severity":1,"message":"252","line":26,"column":25,"nodeType":"253","messageId":"254","endLine":26,"endColumn":27},{"ruleId":"251","severity":1,"message":"255","line":26,"column":25,"nodeType":"253","messageId":"254","endLine":26,"endColumn":27},{"ruleId":"251","severity":1,"message":"255","line":26,"column":33,"nodeType":"253","messageId":"254","endLine":26,"endColumn":35},{"ruleId":"233","severity":1,"message":"234","line":26,"column":50,"nodeType":"235","messageId":"236","endLine":26,"endColumn":52},{"ruleId":"256","severity":1,"message":"257","line":15,"column":52,"nodeType":"258","endLine":15,"endColumn":66,"suggestions":"259"},{"ruleId":"256","severity":1,"message":"260","line":35,"column":46,"nodeType":"258","endLine":35,"endColumn":60,"suggestions":"261"},{"ruleId":"256","severity":1,"message":"262","line":36,"column":43,"nodeType":"258","endLine":36,"endColumn":57,"suggestions":"263"},{"ruleId":"233","severity":1,"message":"234","line":37,"column":26,"nodeType":"235","messageId":"236","endLine":37,"endColumn":28},{"ruleId":"256","severity":1,"message":"264","line":38,"column":54,"nodeType":"258","endLine":38,"endColumn":68,"suggestions":"265"},{"ruleId":"233","severity":1,"message":"234","line":40,"column":26,"nodeType":"235","messageId":"236","endLine":40,"endColumn":28},{"ruleId":"256","severity":1,"message":"264","line":41,"column":55,"nodeType":"258","endLine":41,"endColumn":69,"suggestions":"266"},{"ruleId":"233","severity":1,"message":"234","line":70,"column":55,"nodeType":"235","messageId":"236","endLine":70,"endColumn":57},{"ruleId":"224","severity":1,"message":"228","line":74,"column":12,"nodeType":"226","messageId":"227","endLine":74,"endColumn":23},{"ruleId":"224","severity":1,"message":"267","line":75,"column":12,"nodeType":"226","messageId":"227","endLine":75,"endColumn":19},{"ruleId":"224","severity":1,"message":"268","line":75,"column":21,"nodeType":"226","messageId":"227","endLine":75,"endColumn":31},{"ruleId":"224","severity":1,"message":"269","line":79,"column":12,"nodeType":"226","messageId":"227","endLine":79,"endColumn":16},{"ruleId":"256","severity":1,"message":"270","line":82,"column":46,"nodeType":"258","endLine":82,"endColumn":60,"suggestions":"271"},{"ruleId":"256","severity":1,"message":"272","line":83,"column":43,"nodeType":"258","endLine":83,"endColumn":57,"suggestions":"273"},{"ruleId":"233","severity":1,"message":"234","line":97,"column":20,"nodeType":"235","messageId":"236","endLine":97,"endColumn":22},{"ruleId":"233","severity":1,"message":"234","line":101,"column":20,"nodeType":"235","messageId":"236","endLine":101,"endColumn":22},{"ruleId":"233","severity":1,"message":"234","line":139,"column":18,"nodeType":"235","messageId":"236","endLine":139,"endColumn":20},{"ruleId":"233","severity":1,"message":"245","line":155,"column":27,"nodeType":"235","messageId":"236","endLine":155,"endColumn":29},{"ruleId":"233","severity":1,"message":"245","line":175,"column":30,"nodeType":"235","messageId":"236","endLine":175,"endColumn":32},{"ruleId":"233","severity":1,"message":"234","line":199,"column":39,"nodeType":"235","messageId":"236","endLine":199,"endColumn":41},{"ruleId":"233","severity":1,"message":"234","line":205,"column":39,"nodeType":"235","messageId":"236","endLine":205,"endColumn":41},{"ruleId":"233","severity":1,"message":"234","line":211,"column":39,"nodeType":"235","messageId":"236","endLine":211,"endColumn":41},{"ruleId":"241","severity":1,"message":"242","line":14,"column":5,"nodeType":"243","messageId":"244","endLine":21,"endColumn":6},{"ruleId":"241","severity":1,"message":"242","line":25,"column":5,"nodeType":"243","messageId":"244","endLine":42,"endColumn":6},{"ruleId":"241","severity":1,"message":"242","line":26,"column":24,"nodeType":"243","messageId":"244","endLine":30,"endColumn":10},{"ruleId":"274","severity":1,"message":"275","line":31,"column":9,"nodeType":"276","messageId":"277","endLine":36,"endColumn":10},{"ruleId":"241","severity":1,"message":"242","line":31,"column":22,"nodeType":"243","messageId":"244","endLine":36,"endColumn":10},{"ruleId":"274","severity":1,"message":"275","line":37,"column":9,"nodeType":"276","messageId":"277","endLine":41,"endColumn":10},{"ruleId":"241","severity":1,"message":"242","line":37,"column":23,"nodeType":"243","messageId":"244","endLine":41,"endColumn":10},{"ruleId":"241","severity":1,"message":"242","line":46,"column":5,"nodeType":"243","messageId":"244","endLine":62,"endColumn":6},{"ruleId":"241","severity":1,"message":"242","line":47,"column":24,"nodeType":"243","messageId":"244","endLine":51,"endColumn":10},{"ruleId":"274","severity":1,"message":"275","line":52,"column":9,"nodeType":"276","messageId":"277","endLine":56,"endColumn":10},{"ruleId":"241","severity":1,"message":"242","line":52,"column":22,"nodeType":"243","messageId":"244","endLine":56,"endColumn":10},{"ruleId":"274","severity":1,"message":"275","line":57,"column":9,"nodeType":"276","messageId":"277","endLine":61,"endColumn":10},{"ruleId":"241","severity":1,"message":"242","line":57,"column":23,"nodeType":"243","messageId":"244","endLine":61,"endColumn":10},{"ruleId":"241","severity":1,"message":"242","line":66,"column":5,"nodeType":"243","messageId":"244","endLine":82,"endColumn":6},{"ruleId":"241","severity":1,"message":"242","line":67,"column":24,"nodeType":"243","messageId":"244","endLine":71,"endColumn":10},{"ruleId":"274","severity":1,"message":"275","line":72,"column":9,"nodeType":"276","messageId":"277","endLine":76,"endColumn":10},{"ruleId":"241","severity":1,"message":"242","line":72,"column":22,"nodeType":"243","messageId":"244","endLine":76,"endColumn":10},{"ruleId":"274","severity":1,"message":"275","line":77,"column":9,"nodeType":"276","messageId":"277","endLine":81,"endColumn":10},{"ruleId":"241","severity":1,"message":"242","line":77,"column":23,"nodeType":"243","messageId":"244","endLine":81,"endColumn":10},{"ruleId":"241","severity":1,"message":"242","line":87,"column":5,"nodeType":"243","messageId":"244","endLine":91,"endColumn":6},{"ruleId":"241","severity":1,"message":"242","line":95,"column":5,"nodeType":"243","messageId":"244","endLine":99,"endColumn":6},{"ruleId":"241","severity":1,"message":"242","line":4,"column":5,"nodeType":"243","messageId":"244","endLine":9,"endColumn":6},{"ruleId":"224","severity":1,"message":"278","line":43,"column":18,"nodeType":"226","messageId":"227","endLine":43,"endColumn":21},{"ruleId":"224","severity":1,"message":"279","line":45,"column":19,"nodeType":"226","messageId":"227","endLine":45,"endColumn":27},{"ruleId":"241","severity":1,"message":"242","line":49,"column":13,"nodeType":"243","messageId":"244","endLine":54,"endColumn":14},{"ruleId":"233","severity":1,"message":"245","line":86,"column":22,"nodeType":"235","messageId":"236","endLine":86,"endColumn":24},{"ruleId":"233","severity":1,"message":"234","line":87,"column":14,"nodeType":"235","messageId":"236","endLine":87,"endColumn":16},{"ruleId":"233","severity":1,"message":"234","line":90,"column":14,"nodeType":"235","messageId":"236","endLine":90,"endColumn":16},{"ruleId":"224","severity":1,"message":"280","line":1,"column":17,"nodeType":"226","messageId":"227","endLine":1,"endColumn":25},{"ruleId":"224","severity":1,"message":"246","line":1,"column":27,"nodeType":"226","messageId":"227","endLine":1,"endColumn":36},{"ruleId":"241","severity":1,"message":"242","line":23,"column":9,"nodeType":"243","messageId":"244","endLine":25,"endColumn":10},{"ruleId":"224","severity":1,"message":"281","line":1,"column":10,"nodeType":"226","messageId":"227","endLine":1,"endColumn":19},{"ruleId":"224","severity":1,"message":"282","line":104,"column":9,"nodeType":"226","messageId":"227","endLine":104,"endColumn":24},{"ruleId":"256","severity":1,"message":"283","line":106,"column":61,"nodeType":"258","endLine":106,"endColumn":77,"suggestions":"284"},{"ruleId":"256","severity":1,"message":"285","line":108,"column":52,"nodeType":"258","endLine":108,"endColumn":68,"suggestions":"286"},{"ruleId":"256","severity":1,"message":"287","line":109,"column":50,"nodeType":"258","endLine":109,"endColumn":66,"suggestions":"288"},{"ruleId":"256","severity":1,"message":"289","line":111,"column":46,"nodeType":"258","endLine":111,"endColumn":62,"suggestions":"290"},{"ruleId":"256","severity":1,"message":"291","line":112,"column":48,"nodeType":"258","endLine":112,"endColumn":64,"suggestions":"292"},{"ruleId":"233","severity":1,"message":"234","line":126,"column":24,"nodeType":"235","messageId":"236","endLine":126,"endColumn":26},{"ruleId":"233","severity":1,"message":"234","line":163,"column":22,"nodeType":"235","messageId":"236","endLine":163,"endColumn":24},{"ruleId":"233","severity":1,"message":"234","line":183,"column":23,"nodeType":"235","messageId":"236","endLine":183,"endColumn":25},{"ruleId":"233","severity":1,"message":"234","line":184,"column":20,"nodeType":"235","messageId":"236","endLine":184,"endColumn":22},{"ruleId":"233","severity":1,"message":"234","line":189,"column":23,"nodeType":"235","messageId":"236","endLine":189,"endColumn":25},{"ruleId":"233","severity":1,"message":"234","line":230,"column":71,"nodeType":"235","messageId":"236","endLine":230,"endColumn":73},{"ruleId":"233","severity":1,"message":"234","line":232,"column":69,"nodeType":"235","messageId":"236","endLine":232,"endColumn":71},{"ruleId":"293","severity":1,"message":"294","line":268,"column":75,"nodeType":"295","messageId":"296","endLine":268,"endColumn":76,"fix":"297"},{"ruleId":"293","severity":1,"message":"294","line":269,"column":111,"nodeType":"295","messageId":"296","endLine":269,"endColumn":112,"fix":"298"},{"ruleId":"293","severity":1,"message":"294","line":274,"column":81,"nodeType":"295","messageId":"296","endLine":274,"endColumn":82,"fix":"299"},{"ruleId":"293","severity":1,"message":"294","line":275,"column":111,"nodeType":"295","messageId":"296","endLine":275,"endColumn":112,"fix":"300"},{"ruleId":"233","severity":1,"message":"234","line":296,"column":39,"nodeType":"235","messageId":"236","endLine":296,"endColumn":41},{"ruleId":"233","severity":1,"message":"234","line":298,"column":39,"nodeType":"235","messageId":"236","endLine":298,"endColumn":41},"no-native-reassign",["301"],"no-negated-in-lhs",["302"],"no-unused-vars","'setQuest' is assigned a value but never used.","Identifier","unusedVar","'checkedStat' is assigned a value but never used.","'setCheckedStat' is assigned a value but never used.","'setRand' is assigned a value but never used.","'setRand2' is assigned a value but never used.","'setMainFight' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Expected '!==' and instead saw '!='.","'useEffect' is defined but never used.","'Shelf' is assigned a value but never used.","'setNum' is assigned a value but never used.","'setBool' is assigned a value but never used.","'getHealth' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'messageBox'. Either include it or remove the dependency array.","ArrayExpression",["303"],"React Hook useEffect has a missing dependency: 'charList'. Either include it or remove the dependency array.",["304"],"React Hook useEffect has a missing dependency: 'OnePlace'. Either include it or remove the dependency array.",["305"],"React Hook useEffect has missing dependencies: 'OnePlace.index', 'buildings', and 'typ'. Either include them or remove the dependency array.",["306"],["307"],"'usedEnv' is assigned a value but never used.","'setUsedEnv' is assigned a value but never used.","'area' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'quest'. Either include it or remove the dependency array.",["308"],"React Hook useEffect has a missing dependency: 'char'. Either include it or remove the dependency array.",["309"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'inv' is assigned a value but never used.","'setItems' is assigned a value but never used.","'useState' is defined but never used.","'fireEvent' is defined but never used.","'playerCharLocal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fighterIndex'. Either include it or remove the dependency array.",["310"],"React Hook useEffect has a missing dependency: 'allyCount'. Either include it or remove the dependency array.",["311"],"React Hook useEffect has a missing dependency: 'foeCount'. Either include it or remove the dependency array.",["312"],"React Hook useEffect has a missing dependency: 'allies'. Either include it or remove the dependency array.",["313"],"React Hook useEffect has a missing dependency: 'enemies'. Either include it or remove the dependency array.",["314"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"315","text":"316"},{"range":"317","text":"316"},{"range":"318","text":"316"},{"range":"319","text":"316"},"no-global-assign","no-unsafe-negation",{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"326","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},[8549,8563],"\n            .",[8661,8675],[8868,8882],[8980,8994],"Update the dependencies array to be: [ForceRefresh, messageBox]",{"range":"343","text":"344"},"Update the dependencies array to be: [ForceRefresh, charList]",{"range":"345","text":"346"},"Update the dependencies array to be: [ForceRefresh, OnePlace]",{"range":"347","text":"348"},"Update the dependencies array to be: [ForceRefresh, OnePlace.index, buildings, typ]",{"range":"349","text":"350"},{"range":"351","text":"350"},"Update the dependencies array to be: [forceRefresh, quest]",{"range":"352","text":"353"},"Update the dependencies array to be: [char, forceRefresh]",{"range":"354","text":"355"},"Update the dependencies array to be: [fighterIndex, refresherLocal]",{"range":"356","text":"357"},"Update the dependencies array to be: [allyCount, refresherLocal]",{"range":"358","text":"359"},"Update the dependencies array to be: [foeCount, refresherLocal]",{"range":"360","text":"361"},"Update the dependencies array to be: [allies, refresherLocal]",{"range":"362","text":"363"},"Update the dependencies array to be: [enemies, refresherLocal]",{"range":"364","text":"365"},[506,520],"[ForceRefresh, messageBox]",[1076,1090],"[ForceRefresh, charList]",[1134,1148],"[ForceRefresh, OnePlace]",[1285,1299],"[ForceRefresh, OnePlace.index, buildings, typ]",[1439,1453],[2231,2245],"[forceRefresh, quest]",[2289,2303],"[char, forceRefresh]",[2885,2901],"[fighterIndex, refresherLocal]",[2955,2971],"[allyCount, refresherLocal]",[3022,3038],"[foeCount, refresherLocal]",[3086,3102],"[allies, refresherLocal]",[3151,3167],"[enemies, refresherLocal]"]